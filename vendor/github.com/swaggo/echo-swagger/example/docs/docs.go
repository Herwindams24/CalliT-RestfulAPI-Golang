// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-01-12 18:44:40.928256 +0800 CST m=+0.272034118

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "title": "Panggilan Darurat Rumah Sakit API",
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2",
    "paths": {
        "/daftarInstansi": {
            "get": {
                "description": "Daftar Panggilan darurat Rumah Sakit",
                "tags" : [daftarInstansi],
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "summary": "Daftar Panggilan darurat Rumah Sakit",
                "parameters": [],

                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                            "$ref": "#/definition/web.GetdaftarInstansiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string,
                            "$ref": "#/definitions/web.WrongMethode"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                    }
                }
            },
            "post": {
                "description": "Daftar Panggilan darurat Rumah Sakit",
                "tags" : [daftarInstansi],
                "consumes": ["multipart/form-data"],
                "security":["bearerAuth": []],
                "produces": ["application/json"],
                "summary": "Menambahkan Daftar Panggilan darurat Rumah Sakit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namaInstansi",
                        "name": "namaInstansi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kota",
                        "name": "Kota",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telfon",
                        "name": "telfon",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "$ref": "#/definitions/web.PostdaftarInstansiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.WrongMethode"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "description": "Di metode ini user dapat mengedit nama, kota, maupun telepon Rumah Sakit.",
                "tags" : [daftarInstansi],
                "consumes": ["application/json"],
                "security":["bearerAuth": []],
                "produces": ["application/json"],  
                "summary": "Menyunting data yang telah ada",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namaInstansi",
                        "name": "namaInstansi",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Kota",
                        "name": "Kota",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telfon",
                        "name": "telfon",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "$ref": "#/definitions/web.PutdaftarInstansiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.WrongMethode"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "description": "Menghapus data nama penulis yang ada di iLib",
                "tags" : [author],
                "consumes": ["application/json"],
                "security":["bearerAuth": []],
                "produces": ["application/json"],
                "summary": "Melakukan penghapusan data Rumah Sakit yang tidak relevan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "$ref": "#/definitions/web.DeletedaftarInstansiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/web.WrongMethode"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
    "definitions": {
        "web.GetdaftarInstansiSuccess": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "namaInstansi": {
                    "type": "string"
                }
                "Kota": {
                    "type": "string"
                }
                "telefon": {
                    "type": "string"
                }
            }
        },
        "web.PostdaftarInstansiSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "web.PutdaftarInstansiSucces": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "web.DeletedaftarInstansiSucces": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "web.WrongMethod": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
